//apenas para criar um ambiente de teste no meu pc, pode deletar isso dps

const fs = require('fs-extra');
const path = require('path');
const os = require('os');
const username = 'paran'; 
const base = path.join('C:', 'Users', username, 'OneDrive - Fagron', 'COM272 - FagronTech - Onboarding', '# Backoffice');

const estrutura = [
  '# BOT Extens√£o',
  path.join('# BOT Extens√£o', '#FCERTA EXTENS√ÉO'),
  path.join('# BOT Extens√£o', '#PHUSION EXTENS√ÉO'),
];

const modeloArquivo = path.join(base, '# BOT Extens√£o', 'Modelo - Fluxo de atendimento BOT Num√©rico.vsdx');

async function setupEstrutura() {
  try {
    console.log(`‚ÑπÔ∏è Base path: ${base}`);

    // Create directories
    for (const sub of estrutura) {
      const fullPath = path.join(base, sub);
      try {
        await fs.ensureDir(fullPath);
        console.log(`üìÅ Pasta criada: ${fullPath}`);
      } catch (err) {
        console.error(`‚ùå Erro ao criar pasta ${fullPath}: ${err.message}`);
        throw err;
      }
    }

    try {
      if (!(await fs.pathExists(modeloArquivo))) {
        await fs.writeFile(modeloArquivo, 'Arquivo modelo de fluxo simulado');
        console.log(`üìÑ Arquivo criado: ${modeloArquivo}`);
      } else {
        console.log(`üìÑ Modelo j√° existe: ${modeloArquivo}`);
      }
    } catch (err) {
      console.error(`‚ùå Erro ao criar/verificar arquivo ${modeloArquivo}: ${err.message}`);
      throw err;
    }

    console.log('\n‚úÖ Estrutura simulada pronta.');
  } catch (err) {
    console.error(`‚ùå Erro geral na execu√ß√£o: ${err.message}`);
    process.exit(1);
  }
}
setupEstrutura();